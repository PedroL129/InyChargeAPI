/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ChargePointModel;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-07-09T18:41:28.991Z")

@Api(value = "charge_point", description = "the charge_point API")
@RequestMapping(value = "/v1")
public interface ChargePointApi {

    @ApiOperation(value = "", nickname = "addChargePoint", notes = "", tags={ "chargePoint", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/charge_point",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addChargePoint(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ChargePointModel body);


    @ApiOperation(value = "", nickname = "deleteChagerPoint", notes = "", tags={ "chargePoint", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Charge point not found") })
    @RequestMapping(value = "/charge_point/{chargePointId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteChagerPoint(@ApiParam(value = "",required=true) @PathVariable("chargePointId") String chargePointId);


    @ApiOperation(value = "", nickname = "getAllChargerPoints", notes = "", response = ChargePointModel.class, responseContainer = "List", tags={ "chargePoint", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ChargePointModel.class, responseContainer = "List") })
    @RequestMapping(value = "/charge_point",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<ChargePointModel>> getAllChargerPoints();


    @ApiOperation(value = "Find charge point by ID", nickname = "getChargePointById", notes = "", response = ChargePointModel.class, tags={ "chargePoint", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ChargePointModel.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Charge point not found") })
    @RequestMapping(value = "/charge_point/{chargePointId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ChargePointModel> getChargePointById(@ApiParam(value = "",required=true) @PathVariable("chargePointId") String chargePointId);


    @ApiOperation(value = "", nickname = "updateChargePoint", notes = "", tags={ "chargePoint", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/charge_point/{chargePointId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateChargePoint(@ApiParam(value = "",required=true) @PathVariable("chargePointId") String chargePointId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody ChargePointModel chargePoint);

}
