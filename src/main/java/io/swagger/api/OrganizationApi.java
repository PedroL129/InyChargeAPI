/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.OrganizationModel;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-07-09T18:41:28.991Z")

@Api(value = "organization", description = "the organization API")
@RequestMapping(value = "/v1")
public interface OrganizationApi {

    @ApiOperation(value = "", nickname = "addOrganization", notes = "", tags={ "organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/organization",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addOrganization(@ApiParam(value = "" ,required=true )  @Valid @RequestBody OrganizationModel body);


    @ApiOperation(value = "", nickname = "deleteOrganization", notes = "", tags={ "organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Organization not found") })
    @RequestMapping(value = "/organization/{organizationId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteOrganization(@ApiParam(value = "",required=true) @PathVariable("organizationId") String organizationId);


    @ApiOperation(value = "", nickname = "getAllOrganizations", notes = "", response = OrganizationModel.class, responseContainer = "List", tags={ "organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = OrganizationModel.class, responseContainer = "List") })
    @RequestMapping(value = "/organization",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<OrganizationModel>> getAllOrganizations();


    @ApiOperation(value = "Find organization by ID", nickname = "getOrganizationById", notes = "", response = OrganizationModel.class, tags={ "organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = OrganizationModel.class),
        @ApiResponse(code = 400, message = "Invalid ID supplied"),
        @ApiResponse(code = 404, message = "Organization not found") })
    @RequestMapping(value = "/organization/{organizationId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<OrganizationModel> getOrganizationById(@ApiParam(value = "",required=true) @PathVariable("organizationId") String organizationId);


    @ApiOperation(value = "", nickname = "updateOrganization", notes = "", tags={ "organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/organization/{organizationId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateOrganization(@ApiParam(value = "",required=true) @PathVariable("organizationId") String organizationId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody OrganizationModel organization);

}
